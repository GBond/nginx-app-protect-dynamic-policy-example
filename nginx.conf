
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

load_module modules/ngx_http_app_protect_module.so;
load_module modules/ngx_http_js_module.so;

events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  
                    'remote_addr="$remote_addr", '
                    '[time_local=$time_local], '
                    'request="$request", '
                    'status="$status", '
                    'http_referer="$http_referer", '
                    'body_bytes_sent="$body_bytes_sent", '
                    'Host="$host", '
                    'sn="$server_name", '
                    'request_time=$request_time, '
                    'http_user_agent="$http_user_agent", '
                    'http_x_forwarded_for="$http_x_forwarded_for", '
                    'request_length="$request_length", '
                    'upstream_address="$upstream_addr", '
                    'upstream_status="$upstream_status", '
                    'upstream_connect_time="$upstream_connect_time", '
                    'upstream_header_time="$upstream_header_time", '
                    'upstream_response_time="$upstream_response_time", '
                    'upstream_response_length="$upstream_response_length"';
    
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    map $http_x_forwarded_for $client_ip {
        default     $http_x_forwarded_for;
        # default $remote_addr;
    }


    keyval_zone zone=one:1m type=string state=/etc/nginx/one.keyval;
    keyval $client_ip $ip_flag zone=one; # Client address is the key,

    include /etc/nginx/conf.d/*.conf;

}


# TCP/UDP proxy and load balancing block
#
#stream {
    # Example configuration for TCP load balancing

    #upstream stream_backend {
    #    zone tcp_servers 64k;
    #    server backend1.example.com:12345;
    #    server backend2.example.com:12345;
    #}

    #server {
    #    listen 12345;
    #    status_zone tcp_server;
    #    proxy_pass stream_backend;
    #}
#}
